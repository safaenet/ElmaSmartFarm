{
  "keep_alive_interval": 15,
  "keep_alive_waiting_timeout": 45,
  "max_sensor_error_count": 10,
  "max_sensor_read_count": 10,
  "sensor_low_battery_level": 10,
  "alarm_level": {
    "low_battery": 1,
    "not_alive": 2,
    "invalid_data": 1,
    "invalid_value": 1,
    "high_temp": 3,
    "low_temp": 3,
    "high_humid": 2,
    "low_humid": 2,
    "high_ammonia": 3,
    "high_co2": 3,
    "long_time_bright": 2,
    "long_time_dark": 2,
    "high_brightness": 2,
    "low_brightness": 2,
    "long_no_feed": 3,
    "long_leave": 3,
    "no_power": 4
  },
  "alarm_level_timeout": {
    "farm_alarm_duration": 20,
    "poultry_alarm_duration": 20,
    "1": {
      "enable": true,
      "first_time": 5,
      "every": 5,
      "snooze": 5,
      "count_in_cycle": 3
    },
    "2": {
      "enable": true,
      "first_time": 5,
      "every": 5,
      "snooze": 5,
      "count_in_cycle": 3
    },
    "3": {
      "enable": true,
      "first_time": 5,
      "every": 5,
      "snooze": 5,
      "count_in_cycle": 3
    },
    "4": {
      "enable": true,
      "first_time": 5,
      "every": 5,
      "snooze": 5,
      "count_in_cycle": 3
    }
  },
  "scalar_general": {
    "read_interval": 15,
    "write_to_db_interval": 10, //(Seconds)
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100
  },
  "temperature": {
    "farm_min_value": 20, //Wont accept the incoming data if lower than this value. (Celsius)
    "farm_max_value": 35, //Wont accept the incoming data if higher than this value. (Celsius)
    "outdoor_min_value": -10,
    "outdoor_max_value": 60,
    "invalid_data_watch_timeout": 100,
    "invalid_value_watch_timeout": 100
  },
  "humidity": {
    "min_value": 0, //Wont accept the incoming data if lower than this value. (Percent)
    "max_value": 100, //Wont accept the incoming data if higher than this value. (Percent)
    "invalid_data_watch_timeout": 100,
    "invalid_value_watch_timeout": 100
  },
  "ambient_light": {
    "min_value": 0, //Wont accept the incoming data if lower than this value. (Percent)
    "max_value": 100, //Wont accept the incoming data if higher than this value. (Percent)
    "invalid_data_watch_timeout": 100,
    "invalid_value_watch_timeout": 100
  },
  "ammonia": {
    "min_value": 0, //Wont accept the incoming data if lower than this value. (Percent)
    "max_value": 100, //Wont accept the incoming data if higher than this value. (Percent)
    "invalid_data_watch_timeout": 100,
    "invalid_value_watch_timeout": 100
  },
  "co2": {
    "min_value": 0, //Wont accept the incoming data if lower than this value. (Percent)
    "max_value": 100, //Wont accept the incoming data if higher than this value. (Percent)
    "invalid_data_watch_timeout": 100,
    "invalid_value_watch_timeout": 100
  },
  "commute": {
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100,
    "invalid_data_watch_timeout": 100,
    "invalid_value_watch_timeout": 100
  },
  "feed": {
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100
  },
  "checkup": {
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100
  },
  "farm_power": {
    "read_interval": 30,
    "write_on_value_change": true,
    "write_to_db_interval": 30, //(Seconds)
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100,
    "invalid_data_watch_timeout": 100
  },
  "main_power": {
    "read_interval": 30,
    "write_on_value_change": true,
    "write_to_db_interval": 30, //(Seconds)
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100,
    "invalid_data_watch_timeout": 100
  },
  "backup_power": {
    "read_interval": 30,
    "write_on_value_change": true,
    "write_to_db_interval": 30, //(Seconds)
    "write_to_db_always": true,
    "not_alive_watch_timeout": 100,
    "invalid_data_watch_timeout": 100
  },
  "observer": {
    "observer_check_interval": 5,
    "observe_always": true
  }
}